name: verifier action
on:
  # Daily run.
  # schedule:
  #   - cron: "0 4 * * *"
  workflow_dispatch:

permissions: read-all

env:
  #PAT_TOKEN: ${{ secrets.E2E_GENERIC_TOKEN }}
  GH_TOKEN: ${{ github.token }}
  ISSUE_REPOSITORY: ${{ github.repository }}

jobs:
  list-verifiers:
    runs-on: ubuntu-latest
    outputs:
      # https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/#new-fromjson-method-in-expressions
      # https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson
      version: ${{ steps.generate-versions.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.1.2
        with:
          # Note: the example-package need to be checkout'ed in the default workspace.
          repository: slsa-framework/example-package
          ref: main

      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.1.2
        with:
          path: __THIS_REPO__

      - name: Generate verifier list
        id: generate-versions
        run: ./__THIS_REPO__/.github/workflows/scripts/schedule.actions/verifier-action.sh

  verifier-run:
    needs: list-verifiers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJson(needs.list-verifiers.outputs.version) }}

    steps:
      - name: Debug
        env:
          VERSION: ${{ matrix.version }}
        run: echo "version is $VERSION"
      - name: Checkout this repository
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.1.2
        with:
          # TODO: remove after testing.
          repo: slsa-framework/slsa-verifier
          ref: ${{ matrix.version }}

      - name: Run the Action
        env:
          SLSA_VERIFIER_CI_ACTION_REF: ${{ matrix.version }}
        uses: ./actions/installer

      - name: Verify the version
        run: slsa-verifier

      - name: Delete the binary
        run: |
          binary_path=$(which slsa-verifier)
          echo "binary_path: $binary_path"
          rm -rf "$binary_path"

      - name: Get sha1
        id: commit
        env:
          VERSION: ${{ matrix.version }}
        run: |
          # TODO: use $GITHUB_REPOSITORY
          commit_sha=$(api -H "Accept: application/vnd.github+json" /repos/slsa-framework/slsa-verifier/git/ref/tags/v2.0.0 | jq -r '.object.sha')
          echo "commit_sha=$commit_sha" >> "$GITHUB_OUTPUT"
          echo "$VERSION: $commit_sha"

      - name: Run the Action
        env:
          SLSA_VERIFIER_CI_ACTION_REF: ${{ steps.commit.outputs.commit_sha }}
        uses: ./actions/installer

      run: |
          binary_path=$(which slsa-verifier)
          echo "binary_path: $binary_path"
          rm -rf "$binary_path"

      - name: Install invalid commit
        run: |
          echo "TODO"

# TODO: a non-existent version and commit.
